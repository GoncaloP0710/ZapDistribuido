Usando uma blockchain um atacante poderia simplesmente ligar-se a rede e obter
a blockchain inteira. A encriptação seria sufeciente para impedir o perigo deste obeter
todas as menssagens trocadas?

Temos de ter em conta menssagens para utilizadores que não estão online no momento?
Ou seja, ter uma lista onde estas são guardadas (por exemplo: num servidor) para
depois serem enviadas para o recetor quando se ligar novamente?

Ao usar uma blockchain faria sentido tomar cada nó como uma menssagem? Se sim, esta
ideologia não iria criar uma chain demasiado grande? 
Então cada nó deveria conter a informação de cada utilizador? Incluindo todas as menssagems 
e outras possíveis informações acerca do mesmo?

Ao usar o socket.io do java, é necessario passar como atributos o ip e o porto a onde fazer a ligação.
Como estamos a falar de uma app como o whatssup, é suposto ter um serviço como o dns para transformar 
por exemplo numeros de telefone em ips? Se tivermos de tratar deste problema, ao usar a solução do
servidor DNS não iria centralizar a nossa solução?

Usar uma blockchain é uma boa solução? Ou deveriamos usar uma rede P2P do estilo Chord? Ou então ainda
outra arquitetura?

Usar java parece uma boa linguagem para realizar a aplicação?


// ---------------------------------------------------------------------------------------------

menssagems:

- Enter Node: (update the finger table of the previous node) (update the next node) (update previous node)
 - NodeDTO: node to Enter

- Exit Node: (Need to update all nodes that have the node on its finger table)
 - NodeDTO node to Exit
 - 

- Send Message: 
 - byte[] message
 - BigInteger: hash of the node to recive the message

- Update finger table:
 - 
 